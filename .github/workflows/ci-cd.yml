name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Lint and Test
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/ship-planning-test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'

  # Security Audit
  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate

  # Build Docker Image
  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: ${{ env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != '' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      if: ${{ env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != '' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ship-planning-ai:latest
          ${{ secrets.DOCKER_USERNAME }}/ship-planning-ai:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build Docker image (local only)
      if: ${{ env.DOCKER_USERNAME == '' || env.DOCKER_PASSWORD == '' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ship-planning-ai:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Deploy to Staging (only if Docker secrets are available)
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    
    steps:
    - name: Deploy to staging
      if: ${{ env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != '' }}
      run: |
        echo "Deploying to staging environment"
        echo "Docker image: ${{ secrets.DOCKER_USERNAME }}/ship-planning-ai:${{ github.sha }}"
        # Add your deployment commands here
        # Example: kubectl apply -f k8s/staging/
    
    - name: Skip deployment (no Docker secrets)
      if: ${{ env.DOCKER_USERNAME == '' || env.DOCKER_PASSWORD == '' }}
      run: |
        echo "Skipping staging deployment - Docker Hub credentials not configured"
    
  # Deploy to Production (only if Docker secrets are available)
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    environment: production
    
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    
    steps:
    - name: Deploy to production
      if: ${{ env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != '' }}
      run: |
        echo "Deploying to production environment"
        echo "Docker image: ${{ secrets.DOCKER_USERNAME }}/ship-planning-ai:${{ github.sha }}"
        # Add your production deployment commands here
        # Example: kubectl apply -f k8s/production/
    
    - name: Skip deployment (no Docker secrets)
      if: ${{ env.DOCKER_USERNAME == '' || env.DOCKER_PASSWORD == '' }}
      run: |
        echo "Skipping production deployment - Docker Hub credentials not configured"
